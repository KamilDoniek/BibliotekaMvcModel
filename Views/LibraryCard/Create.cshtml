@model BilbiotekaMVCmodel.Models.LibraryCard

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>LibraryCard</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CardNumber" class="control-label"></label>
                <input asp-for="CardNumber" class="form-control" />
                <span asp-validation-for="CardNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UserId" class="control-label"></label>
                <select asp-for="UserId" class ="form-control" asp-items="ViewBag.UserId"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script >
 document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form");
        const errorSpans = document.querySelectorAll(".field-validation-error");

        form.addEventListener("submit", function (e) {
            if (!validateCardNumber()) {
                e.preventDefault();
            }
        });
         function validateCardNumber() {
                    const cardNumberInput = document.getElementById("CardNumber");
        
                    const cardNumberRegex = /^\d{10}$/;
                    const cardNumber = cardNumberInput.value;
        
                    if (!cardNumberRegex.test(cardNumber)) {
                        errorSpans[0].InnerHtml = "Numer karty musi zawierać dokładnie 10 cyfr.";
                        return false;
                    } else {
                        errorSpans[0].InnerHtml = "";
                        return true;
                    }
                }

    });

</script>

